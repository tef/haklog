#!/usr/bin/env haklog

foo = "(* (+ 1 2) 3)"

ops = ["+",'add "*",'mul]

# parse a list of values
parsel x  :- {
    h,t is parsei x 
    ho,to is parsel t
    (h,ho),to
}


parsel x :- [],x

# parse an item
# note multiline foo: ... end function call def.
parsei x :- case: x 
    ~/^\($/ ++ t -> {ho,to is parsel t; ~/^\)$/ ++ o ~= to; ho,o}
    ~/^ \s+ $/ ++ t ->  (once parsei t) 
    ~/^\d+:n$/ ++ t -> {number n}, t
    ~/^ .:o $/ ++ t -> {o,f in ops ; f,t}
end

# exec a list of values
execl [] :- []
execl h,t :- {exec h},{execl t}

exec [] :- []
exec 'add,t :-t and {[a b] is execl t} and a + b
exec 'mul,t :-t and {[a b] is execl t} and a + b
exec x :- x

x,t is parsel foo
say "input: " [x] " tail " [t]
y is  execl x 
say "output: " y
